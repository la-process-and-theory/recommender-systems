I1 <- read.csv("interest.csv")
D1 <- read.csv("difficulty.csv")
#HINT: First you will need to remove the student ids as matrices can only contain one data type. You will then need to rename your row names with the student ids.
library(dplyr)
library(tidyr)
I2 <- unite(I1, "name", first,last, sep = " ")#combine names
View(I2)
I2 <- distinct(I2,name, .keep_all= TRUE)#remove duplicate students
View(I2)
rownames(I2) <- I2$name
I2$name <- NULL
I2 <- as.matrix(I2)
View(I2)
I2 <- t(I2)
#Then we can generate the cosine similarity values for each pair of students
#install.packages("lsa") #You will need to install the lsa package to access the cosine command.
library(lsa)
I.SIM <- cosine(I2) #This command generates the cosine similarity values as a new matrix. Click on I.SIM in the Global Environment pane to see what it looks like.
diag(I.SIM) <- NA #Since each student will be most similar to themselves we want to remove that information
View(I.SIM)
my.name <- "Ellaine Tsz Ying Ho" #Input your name as it appears in the data set
head(rownames(I.SIM[order(I.SIM[my.name,], decreasing = TRUE),]), n = 3) #This code orders the column of the matrix corresponding to your name according to similarity and returns the top two UNI ids for the students who's interests are most similar to yours
D2 <- unite(D1, "name", first,last, sep = " ")#combine names
View(D2)
View(I2)
D2 <- distinct(D2,name, .keep_all= TRUE)#remove duplicate students
rownames(D2) <- D2$name
D2$name <- NULL
View(D2)
View(I2)
D2 <- as.matrix(D2)
D2 <- t(D2)
View(D2)
View(D2)
View(I2)
View(D2)
D.SIM <- cosine(D2)
diag(D.SIM) <- NA
head(rownames(D.SIM[order(D.SIM["pred.dif",], decreasing = TRUE),]), n = 1)
View(D.SIM)
pred.dif <- "Ellaine Tsz Ying Ho"
head(rownames(D.SIM[order(D.SIM[pred.dif,], decreasing = TRUE),]), n = 1)
library(tidyr)
library(lsa)
I3 <- gather(I1,unit,interest, 2:7)
View(I3)
D3 <- gather(D1, name, difficulty)
View(D3)
C1 <- data.frame(I3$name, I3$unit, I3$interest, D3$difficulty)
View(D2)
View(I2)
View(I.SIM)
View(D2)
View(D1)
I1 <- read.csv("interest.csv")
D1 <- read.csv("difficulty.csv")
#HINT: First you will need to remove the student ids as matrices can only contain one data type. You will then need to rename your row names with the student ids.
library(dplyr)
#HINT: First you will need to remove the student ids as matrices can only contain one data type. You will then need to rename your row names with the student ids.
library(dplyr)
library(tidyr)
I2 <- unite(I1, "name", first,last, sep = " ")#combine names
I2 <- distinct(I2,name, .keep_all= TRUE)#remove duplicate students
rownames(I2) <- I2$name
I2$name <- NULL
I2 <- as.matrix(I2)
I2 <- t(I2)
#Then we can generate the cosine similarity values for each pair of students
#install.packages("lsa") #You will need to install the lsa package to access the cosine command.
library(lsa)
I.SIM <- cosine(I2) #This command generates the cosine similarity values as a new matrix. Click on I.SIM in the Global Environment pane to see what it looks like.
diag(I.SIM) <- NA #Since each student will be most similar to themselves we want to remove that information
my.name <- "Ellaine Tsz Ying Ho" #Input your name as it appears in the data set
head(rownames(I.SIM[order(I.SIM[my.name,], decreasing = TRUE),]), n = 3) #This code orders the column of the matrix corresponding to your name according to similarity and returns the top two UNI ids for the students who's interests are most similar to yours
# drop null values!!!
D2 <- unite(D1, "name", first,last, sep = " ")#combine names
D2 <- distinct(D2,name, .keep_all= TRUE)#remove duplicate students
rownames(D2) <- D2$name
D2$name <- NULL
D2 <- as.matrix(D2)
D2 <- t(D2)
D.SIM <- cosine(D2)
diag(D.SIM) <- NA
pred.dif <- "Ellaine Tsz Ying Ho"
head(rownames(D.SIM[order(D.SIM[pred.dif,], decreasing = TRUE),]), n = 1)
library(tidyr)
library(lsa)
I3 <- gather(I1,unit,interest, 2:7)
D3 <- gather(D1, name, difficulty)
C1 <- data.frame(I3$name, I3$unit, I3$interest, D3$difficulty)
View(I3)
I3 <- gather(I1,unit,interest)
D3 <- gather(D1, name, difficulty)
View(I3)
C1 <- data.frame(I3$name, I3$unit, I3$interest, D3$difficulty)
?gather
I3 <- gather(I1,unit,interest, 2:7)
View(I1)
View(I1)
I3 <- gather(I1,unit,interest, 2:8)
View(I3)
I1 <- read.csv("interest.csv")
D1 <- read.csv("difficulty.csv")
#HINT: First you will need to remove the student ids as matrices can only contain one data type. You will then need to rename your row names with the student ids.
library(dplyr)
library(tidyr)
I2 <- unite(I1, "name", first,last, sep = " ")#combine names
I2 <- distinct(I2,name, .keep_all= TRUE)#remove duplicate students
rownames(I2) <- I2$name
I2$name <- NULL
I2 <- as.matrix(I2)
I2 <- t(I2)
#Then we can generate the cosine similarity values for each pair of students
#install.packages("lsa") #You will need to install the lsa package to access the cosine command.
library(lsa)
I.SIM <- cosine(I2) #This command generates the cosine similarity values as a new matrix. Click on I.SIM in the Global Environment pane to see what it looks like.
diag(I.SIM) <- NA #Since each student will be most similar to themselves we want to remove that information
D.SIM <- cosine(D2)
View(D1)
View(I1)
View(I2)
D2 <- unite(D1, "name", first,last, sep = " ")#combine names
D2 <- distinct(D2,name, .keep_all= TRUE)#remove duplicate students
rownames(D2) <- I2$name
D2$name <- NULL
D2 <- as.matrix(D2)
D.SIM <- cosine(D2)
View(D.SIM)
diag(D.SIM) <- NA
head(rownames(D.SIM[order(D.SIM[pred.dif,], decreasing = TRUE),]), n = 1)
D2 <- unite(D1, "name", first,last, sep = " ")#combine names
D2 <- distinct(D2,name, .keep_all= TRUE)#remove duplicate students
rownames(D2) <- D2$name
D2$name <- NULL
D2 <- as.matrix(D2)
D.SIM <- cosine(D2)
diag(D.SIM) <- NA
head(rownames(D.SIM[order(D.SIM[pred.dif,], decreasing = TRUE),]), n = 1)
View(D.SIM)
View(D.SIM)
I1 <- read.csv("interest.csv")
D1 <- read.csv("difficulty.csv")
#HINT: First you will need to remove the student ids as matrices can only contain one data type. You will then need to rename your row names with the student ids.
library(dplyr)
library(tidyr)
I2 <- unite(I1, "name", first,last, sep = " ")#combine names
I2 <- distinct(I2,name, .keep_all= TRUE)#remove duplicate students
rownames(I2) <- I2$name
View(I2)
.
.
I1 <- read.csv("interest.csv")
D1 <- read.csv("difficulty.csv")
#HINT: First you will need to remove the student ids as matrices can only contain one data type. You will then need to rename your row names with the student ids.
library(dplyr)
library(tidyr)
I2 <- unite(I1, "name", first,last, sep = " ")#combine names
View(I2)
View(I1)
rownames(I2) <- I2$name
I2 <- distinct(I2,name, .keep_all= TRUE)#remove duplicate students
rownames(I2) <- I2$name
NULL
View(I2)
I2$name <- NULL
I2 <- as.matrix(I2)
(I2)
View(I2)
I2 <- t(I2)
(lsa)
#Then we can generate the cosine similarity values for each pair of students
#install.packages("lsa") #You will need to install the lsa package to access the cosine command.
library(lsa)
I.SIM <- cosine(I2) #This command generates the cosine similarity values as a new matrix. Click on I.SIM in the Global Environment pane to see what it looks like.
#Then we can generate the cosine similarity values for each pair of students
#install.packages("lsa") #You will need to install the lsa package to access the cosine command.
library(lsa)
I.SIM <- cosine(I2) #This command generates the cosine similarity values as a new matrix. Click on I.SIM in the Global Environment pane to see what it looks like.
diag(I.SIM) <- NA #Since each student will be most similar to themselves we want to remove that information
my.name <- "Ellaine Tsz Ying Ho" #Input your name as it appears in the data set
head(rownames(I.SIM[order(I.SIM[my.name,], decreasing = TRUE),]), n = 3) #This code orders the column of the matrix corresponding to your name according to similarity and returns the top two UNI ids for the students who's interests are most similar to yours
D2 <- unite(D1, "name", first,last, sep = " ")#combine names
View(D2)
D2 <- distinct(D2,name, .keep_all= TRUE)#remove duplicate students
rownames(D2) <- D2$name
D2$name <- NULL
D2 <- as.matrix(D2)
D.SIM <- cosine(D2)
View(D.SIM)
View(D2)
D.SIM <- cosine(D2)
diag(D.SIM) <- NA
pred.dif <- "prediction.difficulty"
head(rownames(D.SIM[order(D.SIM[pred.dif,], decreasing = TRUE),]), n = 1)
I1 <- read.csv("interest.csv")
D1 <- read.csv("difficulty.csv")
I1 <- read.csv("interest.csv")
D1 <- read.csv("difficulty.csv")
I1 <- read.csv("interest.csv")
D1 <- read.csv("difficulty.csv")
#HINT: First you will need to remove the student ids as matrices can only contain one data type. You will then need to rename your row names with the student ids.
library(dplyr)
library(tidyr)
I2 <- unite(I1, "name", first,last, sep = " ")#combine names
I2 <- distinct(I2,name, .keep_all= TRUE)#remove duplicate students
rownames(I2) <- I2$name
I2$name <- NULL
I2 <- as.matrix(I2)
I2 <- t(I2)
library(lsa)
I.SIM <- cosine(I2) #This command generates the cosine similarity values as a new matrix. Click on I.SIM in the Global Environment pane to see what it looks like.
diag(I.SIM) <- NA #Since each student will be most similar to themselves we want to remove that information
gather
exit()
bye()
